name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # Build for Linux (Intel and ARM)
  linux:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: ubuntu-24.04
            rust-target: x86_64-unknown-linux-gnu
          - arch: arm64
            runner: ubuntu-24.04-arm
            rust-target: aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          targets: ${{ matrix.rust-target }}

      - name: Set up xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Build and pack for Linux
        run: |
          xmake f -p linux -vyD
          xmake -vyD
          xmake pack -vyD

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.arch }}
          path: build/xpack/**/*

  # Build for Windows (Intel and ARM) using MSYS2
  windows:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: windows-latest
            rust_package: mingw-w64-x86_64-rust
            xmake_package: mingw-w64-x86_64-xmake
            toolchain_package: mingw-w64-x86_64-toolchain
          # - arch: arm64
          #   runner: windows-11-arm
          #   rust_package: mingw-w64-clang-aarch64-rust
          #   xmake_package: mingw-w64-clang-aarch64-xmake
          #   toolchain_package: mingw-w64-clang-aarch64-toolchain
    steps:
      - uses: actions/checkout@v4

      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          # Install required development tools including Rust and xmake
          install: |
            base-devel
            cmake
            git
            ${{ matrix.toolchain_package }}
            ${{ matrix.rust_package }}
            ${{ matrix.xmake_package }}

      - name: Build and pack for Windows with MSYS2
        shell: msys2 {0}
        run: |
          # Configure and build using MSYS2 environment
          xmake f -p mingw -vyD
          xmake -vyD
          xmake pack -vyD

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}
          path: build/xpack/**/*

  # Build for macOS (Intel and ARM)
  macos:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: macos-14-large
            rust-target: x86_64-apple-darwin
          - arch: arm64
            runner: macos-14-xlarge
            rust-target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - name: Install CMake via Homebrew
        run: |
          brew install cmake

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          targets: ${{ matrix.rust-target }}

      - name: Set up xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Build and pack for macOS
        run: |
          xmake f -p macosx -vyD
          xmake -vyD
          xmake pack -vyD

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}
          path: build/xpack/**/*

  # Build for Android (4 architectures)
  android:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [arm64-v8a, armeabi-v7a, x86_64, x86]
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK & NDK
        uses: android-actions/setup-android@v3

      - name: Install CMake from Android SDK and add to PATH
        run: |
          # Install a specific CMake version from the SDK
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "cmake;3.22.1"
          # Add the CMake binary directory to the PATH for subsequent steps
          echo "$ANDROID_HOME/cmake/3.22.1/bin" >> $GITHUB_PATH

      - name: Set up Rust toolchain for Android
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          targets: ${{ matrix.arch == 'arm64-v8a' && 'aarch64-linux-android' || 
                       matrix.arch == 'armeabi-v7a' && 'armv7-linux-androideabi' || 
                       matrix.arch == 'x86_64' && 'x86_64-linux-android' || 
                       'i686-linux-android' }}

      - name: Set up xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Configure xmake global settings for Android
        run: |
          xmake g --ndk=$ANDROID_NDK_HOME --android_sdk=$ANDROID_HOME

      - name: Build and pack for Android
        run: |
          # Map Android ABI names to xmake architecture names
          XMAKE_ARCH=""
          case "${{ matrix.arch }}" in
            "arm64-v8a") XMAKE_ARCH="arm64-v8a" ;;
            "armeabi-v7a") XMAKE_ARCH="armeabi-v7a" ;;
            "x86_64") XMAKE_ARCH="x86_64" ;;
            "x86") XMAKE_ARCH="x86" ;;
          esac
          xmake f -p android -a $XMAKE_ARCH -vyD
          xmake -vyD
          xmake pack -vyD

      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.arch }}
          path: build/xpack/**/*

  # Final job: Create a GitHub Release and upload all artifacts
  release:
    needs: [linux, windows, macos, android]
    runs-on: ubuntu-22.04
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*